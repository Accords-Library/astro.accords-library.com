---
import { Icon } from "astro-icon/components";
import { getLocalizedUrl } from "utils/urls";
import { CookieNames } from "utils/cookies";
import NavOption from "./NavOption.astro";

const { locale = "en" } = Astro.params;
const isReduced =
  Astro.cookies.get(CookieNames.MENU_PANEL_REDUCED)?.boolean() ?? false;
const themeColors =
  Astro.cookies.get(CookieNames.THEME_COLOR)?.value ?? "theme-color-light";
---

<div id="component" class:list={{ reduced: isReduced }}>
  <a
    id="accords-logo"
    data-turbo-confirm="Do you want to leave this page?"
    href={getLocalizedUrl("/", locale)}
  >
    <Icon name="accords" />
  </a>

  <p id="title">Accord’s Library</p>

  <button id="reduce-toggle">
    <Icon name="material-symbols:chevron-left-rounded" width={24} height={24} />
  </button>

  <button
    class={themeColors === "theme-color-dark" ? "dark" : "light"}
    id="theme-toggle"
  >
    <Icon class="when-light" name="material-symbols:light-mode" />
    <Icon class="when-dark" name="material-symbols:dark-mode" />
  </button>

  <NavOption
    href="/library"
    icon="material-symbols:auto-stories"
    title="Library"
    subtitle="Browse all physical and digital media"
  />

  <NavOption
    href="/contents"
    icon="material-symbols:workspaces"
    title="Content"
    subtitle="Explore all content and filter by type or category"
  />

  <NavOption
    href="/wiki"
    icon="material-symbols:travel-explore"
    title="Wiki"
    subtitle="An encyclopedia for everything related to DrakeNieR"
  />

  <NavOption
    href="/chronicles"
    icon="material-symbols:schedule"
    title="Chronicles"
    subtitle="Experience all events and content in chronological order"
  />

  <NavOption href="/news" icon="material-symbols:newspaper" title="News" />

  <NavOption
    href="https://gallery.accords-library.com/posts/"
    icon="material-symbols:perm-media"
    title="Gallery"
  />

  <NavOption href="/archives" icon="material-symbols:save" title="Archives" />

  <NavOption href="/about-us" icon="material-symbols:info" title="About us" />

  <p>
    This website’s content is made available under <a
      href="https://creativecommons.org/licenses/by-sa/4.0/">CC-BY-SA</a
    > unless otherwise noted.
  </p>

  <div id="common-creative">
    <Icon name="creative-commons-brands" />
    <Icon name="creative-commons-by-brands" />
    <Icon name="creative-commons-sa-brands" />
  </div>

  <p>
    Accord’s Library is not affiliated with or endorsed by SQUARE ENIX CO. LTD.
    All game assets and promotional materials belongs to © SQUARE ENIX CO. LTD.
  </p>

  <div id="social-links">
    <Icon name="github-brands" />
    <Icon name="x-brands" />
    <Icon name="discord-brands" />
  </div>
</div>

<script>
  import { CookieNames } from "utils/cookies";
  import { observableWithPersistence } from "utils/micro-observables";
  import { Elementos } from "utils/Elementos";
  import { onLoad } from "utils/turbo";

  onLoad(() => {
    const component = new Elementos("#component");
    const reduceToggleButton = new Elementos("#reduce-toggle");

    const isReduced = observableWithPersistence(
      CookieNames.MENU_PANEL_REDUCED,
      false
    );

    reduceToggleButton.onClick(() => {
      isReduced.update((oldValue) => !oldValue);
      Turbo.cache.clear();
    });

    component.setClass("reduced", isReduced);

    // theme-toggle
    const body = new Elementos("body");
    const themeToggleButton = new Elementos("#theme-toggle");

    const themeColor = observableWithPersistence(
      CookieNames.THEME_COLOR,
      "theme-color-light"
    );

    const isDarkMode = themeColor.select(
      (value) => value === "theme-color-dark"
    );

    themeToggleButton.onClick(() => {
      themeColor.update((oldValue) =>
        oldValue === "theme-color-light"
          ? "theme-color-dark"
          : "theme-color-light"
      );
      Turbo.cache.clear();
    });

    themeToggleButton.setClass(
      { ifFalse: "light", ifTrue: "dark" },
      isDarkMode
    );

    body.setClass(
      { ifFalse: "theme-color-light", ifTrue: "theme-color-dark" },
      isDarkMode
    );
  });
</script>

<style>
  #component {
    --reduced-transition-duration: 5s;
    display: grid;
    padding: 2rem;
    gap: 1rem;

    container-type: inline-size;

    @media (width >= 60rem) {
      transition:
        var(--reduced-transition-duration) width,
        var(--reduced-transition-duration) padding;
      position: relative;

      width: 20rem;
      flex-shrink: 0;
      border-right: var(--border-style);

      & > #title {
        font-family: var(--font-headers);
        font-size: 1.875rem;
        margin: 0;
      }

      & > p {
        transition:
          var(--reduced-transition-duration) font-size,
          var(--reduced-transition-duration) opacity;
      }

      & > #common-creative,
      & > #social-links {
        transition:
          var(--reduced-transition-duration) transform,
          var(--reduced-transition-duration) opacity;
      }

      &.reduced {
        width: 6rem;

        padding: 2rem 1rem;

        & > p,
        & > #title {
          font-size: 0;
          opacity: 0;
        }

        & > #common-creative,
        & > #social-links {
          transform: scale(0);
          opacity: 0;
        }
      }
    }

    & > p {
      text-align: center;
    }

    & > #accords-logo {
      place-self: center;
      width: max(50%, 3rem);
      aspect-ratio: 1/1;
      color: var(--color-base-1000);
      transition: 0.1s color;
      &:hover {
        color: var(--color-base-600);
      }

      & > svg {
        width: 100%;
        height: 100%;
      }
    }

    & > #theme-toggle.dark > .when-light,
    & > #theme-toggle.light > .when-dark {
      display: none;
    }

    & > #common-creative {
      display: grid;
      grid-auto-flow: column;
      place-content: center;
      gap: 0.25rem;

      & > svg {
        width: 24px;
        height: 24px;
      }
    }

    & > #social-links {
      display: grid;
      grid-auto-flow: column;
      place-items: center;

      & > svg {
        width: 40px;
        height: 40px;
      }
    }
  }
</style>

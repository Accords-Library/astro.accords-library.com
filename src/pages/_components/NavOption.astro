---
import { Icon } from "astro-icon/components";
import { getLocalizedUrl } from "utils/urls";
interface Props {
  href: string;
  icon?: string;
  title: string | null | undefined;
  subtitle?: string | null | undefined;
  mode?: "iconOnly" | "default";
}

const { locale } = Astro.params;
const { href, icon, title, subtitle, mode = "default" } = Astro.props;

const currentPath = new URL(Astro.request.url).pathname.slice(
  `/${locale}`.length
);

const isActive = currentPath.startsWith(href);
---

{
  /* ------------------------------------------- HTML ------------------------------------------- */
}

<a
  href={getLocalizedUrl(href, locale)}
  class:list={{ active: isActive }}
  data-tippy-template="#text-content"
>
  {icon && <Icon name={icon} />}
  <div id="text-content" class:list={{ hidden: mode === "iconOnly" }}>
    <p class="font-headers">
      {title}
    </p>
    {subtitle && <p>{subtitle}</p>}
  </div>
</a>

{
  /* ------------------------------------------- CSS -------------------------------------------- */
}

<style>
  a {
    padding: 1rem;
    color: inherit;
    text-decoration: inherit;

    display: flex;
    width: 100%;
    gap: 1.25rem;
    border-radius: 1rem;

    transition:
      0.15s background-color,
      0.15s box-shadow;

    &:hover,
    &.active {
      box-shadow: inset 0 1px 4px -2px var(--color-shadow);
      background-color: var(--color-base-250);

      &:active {
        box-shadow: inset 0 2px 4px 0 var(--color-shadow);
      }
    }

    & > svg {
      width: 24px;
      height: 24px;
      flex-shrink: 0;
    }

    & > #text-content.hidden {
      display: none;
    }
  }

  #text-content {
    display: grid;
    flex-grow: 1;
    gap: 0.25rem;

    & > .font-headers {
      font-size: 150%;
    }

    & > :not(.font-headers) {
      line-height: 1.5;
    }
  }
</style>
